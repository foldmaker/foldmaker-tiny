class f{constructor(e){let t=e;this.types=t?e.map(e=>e.type).join(""):"",this.values=t?e.map(e=>e.value):[]}parse(...e){(e=e.map(([e,t])=>[t,e])).push([()=>void 0,/[\s\n\S]/]);let t=this;do{t=t._replace(t,e)}while(!0===t.modified);return t}add(e,t){this.types+=e,this.values=this.values.concat(t)}_replace({types:e,values:t},a){let l=new f;return tokenize(e,a,({type:e,map:a,index:s})=>{let i=a[0].length,n={raw:t.slice(s,i+s),index:s,count:i,map:a},p=e(n);p?(l.add(p[0],[p[1]]),l.modified=!0):l.add(n.map[0],n.raw)}),l}}tokenize=((e,t,a)=>{let l=0,s=[];for(t.push(["0",/[\s\n\S]/]);e;)t.some(([t,i])=>{let n=i.exec(e);if(n&&n.index<1){let i=n[0],p=a?a({type:t,value:i,map:n,index:l}):{type:t,value:i};return p&&s.push(p),e=e.slice(i.length),l+=i.length,!0}});return s});let Foldmaker=e=>new f(e);